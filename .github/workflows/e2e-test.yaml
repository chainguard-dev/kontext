# Copyright 2023 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: Test

on:
  pull_request:
    branches: ['main']

jobs:
  publish:
    name: E2E Kind
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.x'
      - uses: actions/checkout@v3
      - uses: ko-build/setup-ko@v0.6

      # Test building on pull requests.
      - uses: chainguard-dev/actions/setup-kind@main
        with:
          k8s-version: v1.24.x
          registry-authority: registry.local:5000
      - run: |
          echo KO_DOCKER_REPO=registry.local:5000/kontext >> "$GITHUB_ENV"

      - run: |
          EXPANDER="$(ko build --bare --platform=all ./cmd/expander)"
          BUNDLE="$(go run -ldflags="-X github.com/chainguard-dev/kontext.BaseImageString=${EXPANDER}" \
                          ./cmd/bundler -directory=. -tag=registry.local:5000/bundle)"

          cat > foo.yaml <<EOF
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: test
          spec:
            backoffLimit: 0
            template:
              spec:
                restartPolicy: Never
                initContainers:
                - name: expand-bundle
                  image: ${BUNDLE}
                  workingDir: /workspace
                  volumeMounts:
                  - name: bundle
                    mountPath: /workspace

                containers:
                - name: test
                  image: cgr.dev/chainguard/busybox:latest-glibc
                  workingDir: /workspace
                  volumeMounts:
                  - name: bundle
                    mountPath: /workspace
                  command: ["/bin/sh", "-c"]

                  args:
                  - |
                    cat go.mod

                volumes:
                  - name: bundle
                    emptyDir: {}
          EOF

          kubectl apply -f foo.yaml
          sleep 5
          kubectl wait --timeout 1m --for=condition=Complete jobs test

      - name: Collect diagnostics and upload
        if: ${{ failure() }}
        uses: chainguard-dev/actions/kind-diag@main
